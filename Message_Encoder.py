#-----------------------------------------------------------------------------------------
"""
#  #  ####   ##    ##    ##    ##   ####        ####  #  #   ##    ##   ###   ####  ###
####  #     #  #  #  #  #  #  #  #  #           #     ## #  #  #  #  #  #  #  #     #  #
####  ###    #     #    #  #  #     ###         ###   ## #  #     #  #  #  #  ###   #  #
#  #  #       #     #   ####  # ##  #           #     # ##  #     #  #  #  #  #     ###
#  #  #     #  #  #  #  #  #  #  #  #           #     # ##  #  #  #  #  #  #  #     # #
#  #  ####   ##    ##   #  #   ###  ####        ####  #  #   ##    ##   ###   ####  #  #
"""
#------------------------------------------------------------------------------------------

"""importation des biblioth√®ques utilis√©es dans le code"""
from tkinter import *#on importe la biblioth√®que tkinter (affichage)
import unicodedata # A ne pas oublier pour le formattage du texte (fonctions retire accent)

"""cr√©ation de la fen√™tre"""
window = Tk()  #on d√©finit une fen√™tre appel√©e window

"""param√®tres de la fen√™tre"""
window.title("Message Encoder")  #titre de la fenetre
window.geometry("1400x970")       #taille de la fenetre g√©n√©r√©e
window.config(background='#202124') #couleur de fond

"""Ajouter titre"""
label_titre = Label(window, text="Bienvenue sur Message Encoder !", font=("Arial", 30), bg='#202124', fg= "#ffffff",bd=3)  #d√©fini un label (titre)
label_titre.grid(row=1,column=0, columnspan=25,pady=10)   #affiche ce label

"""PARTIE CESAR"""
label_soustitre = Label(window, text="Ici, vous pouvez coder votre message en chiffrement avec le code de c√©sar:", font=("Arial", 15), bg='#202124', fg= "white")
label_soustitre.grid(row=2, column=0)  #label de la partie c√©sar

"""1-champs de saisie du message √† traduire"""
chaine_c = StringVar() #la valeur de chaine est modifi√©e en direct, (pas quand on √©crit chaine=...)
chaine_c.set("quel message souhaitez vous traduire ?") #on d√©finit un texte par d√©faut pour chaine_c
entree = Entry(window, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13), textvariable=chaine_c)
entree.grid(row=3, column=0, pady=25,ipady=3)#barre de saisie(Entry)du texte que l'on veut traduire

"""2-champs de saisie du pas (d√©calage)"""
clef = StringVar() #la valeur de chaine clef est modifi√©e en direct, (pas quand on √©crit chaine=...)
clef.set("quelle est la cl√© de d√©calage que vous souhaitez utiliser ? (ex: 2)") #chaine qui s'affiche dans l'entry
entree_c = Entry(window, textvariable=clef, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13))
entree_c.grid(row=4, column=0,pady=25,ipady=3)#barre de saisie (Entry) du chiffre de decal.

#---------------------------TRADUCTION DU MESSAGE EN CESAR ---------------------------------

"""fonctions qui convertissent le texte de mani√®re √† obtenir une chaine de caract√®re en majuscule sans accents ni ponctuation"""

alphabet="azertyuiopqsdfghjklmwxcvbnAZERTYUIOPQSDFGHJKLMWXCVBN"

def retireLesAccents(s):  #FONCTION QUI RETIRE LES ACCENTS DE LA CHAINE
    texte= ''.join((c for c in           unicodedata.normalize('NFD', s) if unicodedata.category(c) != 'Mn'))
    return texte

def retireEspPonct(texte): #FONCTION QUI RETIRE LES ESPACES ET LA PONCT. DE LA CHAINE
    rep=""
    for car in texte:
        if car in alphabet:
            rep=rep+car
    return (rep)

def majusc(texte):   #FONCTION QUI MET LE TEXTE ENTIEREMENT EN MAJUSCULE
    rep=""
    for car in texte:
        if ord(car)<91:
            nouvcar=car
        else:
            nouvcar = chr(ord(car)-32)
        rep=rep+nouvcar
    return(rep)

def formateTexte(texte):#FONCTION APPLIQUE LES TROIS FONCTIONS SUR LE TEXTE DE L UTILISATEUR
    texte=retireLesAccents(texte)
    texte=retireEspPonct(texte)
    texte=majusc(texte)
    return(texte)

"""FIN DES FONCTIONS QUI FORMATENT LE TEXTE"""

"""Cl√© de d√©calage"""
#fonction qui qui prend la chaine de caractere √©tant un chiffre (ex: "3") rentr√©e par l'utilisateur et qui la convertit en entier avec int() (ex: "3" devient 3) sa valeur n'est plus chaine de caract√®re mais bien entier

def clefCesar(clef):
    cle=int(clef)
    return cle

"""Traduction en c√©sar"""
#cette fonction prend le texte entr√© par l'utilisateur, le formate par les fonctions de formatages d√©finies au dessus.
def cesar():
    res=""
    texte=chaine_c.get()
    texte=formateTexte(texte)
    print(texte)
    print(entree_c.get())
    clef=clefCesar(entree_c.get())
#puis pour chaque caract√®re de ce texte elle v√©rifie la condition si le code ASCII du caract√®re + la clef>90. si oui alors la r√©ponse sera la transformation en caract√®re (chr) du  code ASCII de chaque caract√®re + la clef - 26 (alphabet) Sinon, la r√©ponse sera la m√™me mais on ne va pas soustraire 26.
    for car in texte:
        clef=int(clef)
        if ord(car)+clef>90:
            res=res+chr(ord(car)+clef-26)
        else:
            res=res+chr(ord(car)+clef)
    print(res)
    entry_response_c.delete(0,END)   #permet de supprimer la valeur pr√©sente dans entry_response_c
    entry_response_c.insert(0,res)   #puis d'ins√©rer la valeur de res dans entry_esponse_c pour l'afficher

    #j'ai choisi d'afficher mes r√©ponses dans des entry et non des Labels car + simple pour les fonctions de copies

#bouton traduire qui appelle la fonction c√©sar avec command=cesar
button = Button(window, text=" Crypter mon message üîí",font=("Arial", 15), bg='white', fg= "#2E2E2E", cursor="hand1", overrelief=RIDGE, activebackground='#2E2E2E', activeforeground="white", command=cesar)
button.grid(row=5, pady=25) #affichage du bouton
#affichage du r√©sultat
entry_response_c = Entry(window, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13)) #definition de l'entry de reponse
entry_response_c.grid(row=6, column=0, pady=25,ipady=3) #affichage de cette r√©ponse

"""copie du texte dans le presse papier de l'utilisateur"""
def mess_copie_c(duration=2000): #fonction d'affichage du message "Message copi√© avec succ√®s !" lors de la copie, "duration" est le temps d'affichage du message "Message copi√© avec succ√®s !" Une fois ce temps √©coul√©, le message (Label) sera d√©truit avec ".destroy"
    label_copie = Label(window, text="Message copi√© avec succ√®s !", font=("Arial", 15), bg='#202124', fg= "white")
    label_copie.grid(row=8, column=0)
    label_copie.after(duration, label_copie.destroy)

#fonction de copie qui prend la r√©ponse affich√©e dans l'entry et qui la copie dans le presse-papier de l'utilisateur
def copie_c(): # fonction qui permet la copie du message avec ".clipboard_clear" qui va supprimer la chaine stock√©e dans les presse papier de l'utilisateur et .clipboard_append(la r√©ponse) qui va stocker dans le presse papier de l'utilisateur la r√©ponse renvoy√©e.
    entry_response_c.clipboard_clear()
    entry_response_c.clipboard_append(entry_response_c.get())

def copie_message_c(): #comme un bouton ne peut prendre qu'une fonction en commande, on d√©finit une 3e fonction qui execute les 2 derni√®res afin d'avoir une seule fonctio en commande mais qui en appelle 2.
    copie_c()
    mess_copie_c()

#bouton copier
copy_button_c=Button(text="copier le texte dans le presse papier", font=("Helvetica", 15),  bg='white', fg= "#2E2E2E", cursor="hand1", overrelief=RIDGE, activebackground='#2E2E2E', activeforeground="white", command=copie_message_c)  #cr√©ation du bouton
copy_button_c.grid(row=7, column=0) #affichage

#--------------------------------------------TRADUCTION EN CESAR TERMINEE-----------------------------------------------

"""PARTIE VIGENERE"""
#soustitre qui affiche que nous abordons la partie traduction Vigenere
label_soustitre = Label(window, text="Ici, vous pouvez coder votre message en chiffrement avec le code de Vigen√®re :", font=("Arial", 15), bg='#202124', fg= "white") #cr√©ation du label
label_soustitre.grid(row=9, column=0, pady=25) #affichage du label

#champs de saisie du message √† traduire
chaine_v = StringVar() #la valeur de chaine est modifi√©e en direct, (pas quand on √©crit chaine=...) Attention il existe d√©j√† une variable chaine donc on lui a donn√© un autre nom
chaine_v.set("quel message souhaitez vous traduire ?") #valeur qui s'affiche par d√©faut
entree1_v = Entry(window, textvariable=chaine_v,width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13))
entree1_v.grid(row=10, column=0, pady=25,ipady=3)

"""" #champs de saisie du pas (d√©calage)"""
clef_v = StringVar() #la valeur de chaine est modifi√©e en direct, (pas quand on √©crit chaine=...)
clef_v.set("quelle est la cl√© que vous souhaitez utiliser ? (ex: CLE)")
entree2_v = Entry(window, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13), textvariable=clef_v)
entree2_v.grid(row=11, column=0,pady=25, ipady=3)

#------------------------------------------TRADUCTION DU MESSAGE EN VIGENERE--------------------------------------------
#Cle de vigenere
def clefVigenere(clef_v): # fonction qui va dire que la cl√© est √©gale √† la valeur entr√©e par l'user dans le champs d√©fini pour cette cl√©.
    clef_v=entree2_v.get()
    return clef_v

#(pour la fonction du dessous) Traduction en chiffrement Vigen√®re,apr√®s avoir formatt√© le texte avec les fonctions de formatages d√©finies plus t√¥t, cette fonction, pour chaque caract√®re du texte, pendant la longueur du texte va d√©finir une r√©ponse qui sera √©gale √† la valeur chr de l'addition de chaque ord de caract√®re + chaque ord de la cl√©, -130 pour remettre le code dans l'alphabet (65 pour chaque ord donc x2 car on en 2 donc 130). on prend le reste de la division euclidienne par 26 (nbre de lettres dans l'alphabet) +65 pour remettre le code ASCII dans les valeurs comprises entre 65 et 90 pour obtenir un message en majuscule et donc afficher les lettres corssepondantes avec le chr du d√©but permettant donc d'obtenir une chaine de caract√®re.

def Vigenere():
    texte=chaine_v.get()
    texte=formateTexte(texte) #on rappelle la fonction qu'on avait d√©fini pour c√©sar
    resp_v=""
    clef_v=clefVigenere(entree2_v.get())
    for i in range (len(texte)):
        resp_v=resp_v+chr((((ord(texte[i])+ord(clef_v[i%len(clef_v)]))-130)%26)+65)
    print(resp_v)
    entry_response_v.delete(0,END) #permet de supprimer la valeur pr√©sente dans entry_response_c
    entry_response_v.insert(0,resp_v) #puis d'ins√©rer la valeur de res dans entry_esponse_c pour l'afficher

#--------------------------------------TRADUCTION EN VIGENERE TERMINEE-----------------------------------------

#bouton traduire
button = Button(window, text="Crypter mon message üîí",font=("Arial", 15), bg='white', fg= "#2E2E2E", cursor="hand1", overrelief=RIDGE, activebackground='#2E2E2E', activeforeground="white", command=Vigenere) #cr√©ation du bouton
button.grid(row = 12, pady=25) # affichage du bouton

#resultat
entry_response_v = Entry(window, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13)) #cr√©ation de l'entry
entry_response_v.grid(row=13, column=0, pady=25, ipady=3) #affichage de l'entry

"""copie du texte dans le presse papier de l'utilisateur"""
#fonction de copie (m√™me que celle de c√©sar mais avec la chaine de l'entry Vigenere

def mess_copie_v(duration=2000): #m√™me fonction que le copie de c√©sar
    label_copie = Label(window, text="Message copi√© avec succ√®s !", font=("Arial", 15), bg='#202124', fg= "white")
    label_copie.grid(row=15, column=0)
    label_copie.after(duration, label_copie.destroy)

def copie_v(): #m√™me fonction que le copie de c√©sar
    entry_response_v.clipboard_clear()
    entry_response_v.clipboard_append(entry_response_v.get())

def copie_message_v(): #m√™me fonction que le copie de c√©sar
    copie_v()
    mess_copie_v()

#bouton copier
copy_button_v=Button(text="copier le texte dans le presse papier", font=("Arial", 15), bg='white', fg= "#2E2E2E", cursor="hand1", overrelief=RIDGE, activebackground='#2E2E2E', activeforeground="white", command=copie_message_v) #cr√©ation du bouton
copy_button_v.grid(row=14, column=0) #affichage du bouton

"""PARTIE BRUTEFORCE DE CESAR"""

label_soustitre = Label(window, text="Ici, vous pouvez d√©chiffrer votre message chiffr√© avec la bruteforce attaque:", font=("Arial", 15), bg='#202124', fg= "white") #cr√©ation du label
label_soustitre.grid(row=2, column=1) #affichage du label

label_warning = Label(window, text="(Pour que le message puisse √™tre clairement d√©crypt√©, veuillez utiliser un message plut√¥t long)", font=("Arial", 10), bg='#202124', fg= "white") #cr√©ation du label
label_warning.grid(row=3, column = 1) #affichage du label

chaine_bfc = StringVar() #la valeur de chaine est modifi√©e en direct, (pas quand on √©crit chaine=...)
chaine_bfc.set("Quel est le message que vous souhaitez decrypter ? (en majuscule)") #message affich√© par d√©faut dans la chaine
entree_bfc = Entry(window, textvariable=chaine_bfc, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13)) #cr√©ation de l'entry affichant la chaine
entree_bfc.grid(row=4, column=1,pady=15, ipady=3) #barre de saisie (Entry) du mdp que l'user souhaite d√©chiffrer, affichage de cette barre

#fonction qui va craquer le code de c√©sar et nous faire obtenir la cl√© de d√©calage et donc le message cod√© √† partir de statistiques,

alph="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
def decalage(text):
    indices=[0]*26
    for car in text:
        indices[alph.index(car)]=indices[alph.index(car)]+1
    imax=0
    max=indices[0]
    for i in range(1,len(indices)):
        if indices[i]>max:
            max=indices[i]
            imax=i
    return imax-4

"""DEFINITION D'UN ENTRY POUR LA REPONSE"""
entree_responsebfc = Entry(window, width=60, bg="#303134", fg="white", bd=0, font=("Arial", 13)) #cr√©ation de l'entry de r√©ponse
entree_responsebfc.grid(row=6, column=1, ipady=3) # affichage de la r√©ponse

def Cesar(text,n): #2e fonction c√©sar qui sert juste pour le bruteforce. on ne peut pas reprendre celle du dessus car elle marche sp√©cialement avec les entry correspondant √† la partie de traduction en c√©sar
    res=""
    for car in text:
        res=res+chr(((ord(car)+n-65)%26)+65)
    return(res)


def decode(): #fonction sans param√®tre pour qu'elle puisse √™tre affect√©e au bouton qui appelle C√©sar
   text2=entree_bfc.get()
   entree_responsebfc.delete(0,END)
   entree_responsebfc.insert(0,Cesar(text2,26-decalage(text2)))

"""DEFINITION DU BOUTON POUR DECODER"""
button = Button(window, text="D√©crypter mon message üîì",font=("Arial", 15), bg='white', fg= "#2E2E2E",  cursor="hand1", overrelief=RIDGE, activebackground='#2E2E2E', activeforeground="white", command=decode)#cr√©ation deu bouton
button.grid(row=5, column=1, pady=25) # affichage du bouton


#affichage de la fen√™tre
window.mainloop()

#----------------------------------------CONTACT ME-------------------------------------------------#
#contact me: slzr.tech@gmail.com
#MADE BY SLZR








